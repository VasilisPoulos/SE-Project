package datamodel;

/**
 * @author      Vasilis Poulos <address @ cse42805@cs.uoi.gr>
 * @version     0.1         
 */


/**
 * 	PatternComponent class that defines the basic methods of the composite
 *	structure, along with default TRIVIAL IMPLEMENTATIONS.
 *	   | 	@author Vasilis Poulos
 *	   |	think this means: define methods, some may do nothing and thats 
 *	   | 	because we need child classes to inherit them 
 *	
 *	Random notes on packages:
 * 
 * 	CreatePackage-Compile  	javac -d . demo.java
 *	Run						java mypack.demo
 */

import java.util.Scanner; // may not needed - only for testing


public class PatternComponent implements Cloneable
{
	protected String name;

	/**
	 *
	 */
	public void add(){};

	/**
	 *
	 */
	public void remove() {}
	
	/**
	 * Shallow copy needs deep
	 */
	@Override
	public PatternComponent clone()
	{
		try
		{
			return (PatternComponent) super.clone();
		}
		catch(CloneNotSupportedException e)
		{
			throw new AssertionError();
		}
	}

	/**
	 *	Saves a new name
	 *  
	 *	@param	outputStream	generated by Scanner [?]
	 *	@return	void
	 *	@since	0.1
	 */
	public void saveName(String name)
	{
		this.name = name;
	}
	
	/**
	 *
	 */
	public void saveContents() {}

	/**
	 *	Only for testing
	 *  
	 *	@param	outputStream	generated by Scanner [?]
	 *	@return	components name
	 *	@since	0.1
	 */
	public String getName()
	{
		return this.name;
	}



	/*
	 * Main class for testing
	 */
	public static void main(String[] args)
	{
		String name;
		PatternComponent component = new PatternComponent();

		Scanner reader = new Scanner(System.in);
		System.out.println("Component Name:");
		name = reader.nextLine();
		component.saveName(name);
		System.out.println(component.getName());
		reader.close();
	}
}